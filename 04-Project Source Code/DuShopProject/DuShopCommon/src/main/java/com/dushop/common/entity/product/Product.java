package com.dushop.common.entity.product;

import com.dushop.common.entity.Brand;
import com.dushop.common.entity.Category;
import com.dushop.common.entity.IdBasedEntity;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import java.util.ArrayList;
import java.util.List;
import java.util.Iterator;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;
/*
 *@BelongsProject: DuShopProject
 *@BelongsPackage: com.dushop.common.entity
 *@Author: Jiang Chufeng
 *@CreateTime: 2022-08-05  16:47
 *@Description: TODO
 *@Version: 1.0
 */

@Entity
@Table(name = "products")
public class Product extends IdBasedEntity {

    /*self-finish*/
    @Column(unique = true, length = 256, nullable = false)
    private String name;

    /*self-finish*/
    @Column(unique = true, length = 256, nullable = false)
    private String alias;

    /*self-finish*/
    @Column(length = 512, nullable = false, name = "short_description")
    private String shortDescription;

    /*self-finish*/
    @Column(length = 4096, nullable = false, name = "full_description")
    private String fullDescription;

    /*self-finish*/
    @Column(name = "created_time")
    private Date createdTime;

    /*self-finish*/
    @Column(name = "updated_time")
    private Date updatedTime;

    /*self-finish*/
    private boolean enabled;

    /*self-finish*/
    @Column(name = "in_stock")
    private boolean inStock;

    /*self-finish*/
    private float cost;

    /*self-finish*/
    private float price;

    /*self-finish*/
    @Column(name = "discount_percent")
    private float discountPercent;

    /*self-finish*/
    private float length;

    /*self-finish*/
    private float width;

    /*self-finish*/
    private float height;

    /*self-finish*/
    private float weight;

    /*self-finish*/
    @Column(name = "main_image", nullable = false)
    private String mainImage;

    /*self-finish*/
    @ManyToOne
    @JoinColumn(name = "category_id")
    private Category category;

    /*self-finish*/
    @ManyToOne
    @JoinColumn(name = "brand_id")
    private Brand brand;

    /*self-finish*/
    @OneToMany(mappedBy = "product", cascade = CascadeType.ALL, orphanRemoval = true)
    private Set<ProductImage> images = new HashSet<>();

    /*self-finish*/
    @OneToMany(mappedBy = "product", cascade = CascadeType.ALL, orphanRemoval = true)
    private List<ProductDetail> details = new ArrayList<>();

    ///////////////////////////////////////////////////////////
    /*Auto-generated by InteliJ Idea*/
    public Product(Integer id) {
        this.id = id;
    }

    public Product() {
    }

    public Product(String name) {
        this.name = name;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getAlias() {
        return alias;
    }

    public void setAlias(String alias) {
        this.alias = alias;
    }

    public String getShortDescription() {
        return shortDescription;
    }

    public void setShortDescription(String shortDescription) {
        this.shortDescription = shortDescription;
    }

    public String getFullDescription() {
        return fullDescription;
    }

    public void setFullDescription(String fullDescription) {
        this.fullDescription = fullDescription;
    }

    public Date getCreatedTime() {
        return createdTime;
    }

    public void setCreatedTime(Date createdTime) {
        this.createdTime = createdTime;
    }

    public Date getUpdatedTime() {
        return updatedTime;
    }

    public void setUpdatedTime(Date updatedTime) {
        this.updatedTime = updatedTime;
    }

    public boolean isEnabled() {
        return enabled;
    }

    public void setEnabled(boolean enabled) {
        this.enabled = enabled;
    }

    public boolean isInStock() {
        return inStock;
    }

    public void setInStock(boolean inStock) {
        this.inStock = inStock;
    }

    public float getCost() {
        return cost;
    }

    public void setCost(float cost) {
        this.cost = cost;
    }

    public float getPrice() {
        return price;
    }

    public void setPrice(float price) {
        this.price = price;
    }

    public float getDiscountPercent() {
        return discountPercent;
    }

    public void setDiscountPercent(float discountPercent) {
        this.discountPercent = discountPercent;
    }

    public float getLength() {
        return length;
    }

    public void setLength(float length) {
        this.length = length;
    }

    public float getWidth() {
        return width;
    }

    public void setWidth(float width) {
        this.width = width;
    }

    public float getHeight() {
        return height;
    }

    public void setHeight(float height) {
        this.height = height;
    }

    public float getWeight() {
        return weight;
    }

    public void setWeight(float weight) {
        this.weight = weight;
    }

    public Category getCategory() {
        return category;
    }

    public void setCategory(Category category) {
        this.category = category;
    }

    public Brand getBrand() {
        return brand;
    }

    public void setBrand(Brand brand) {
        this.brand = brand;
    }

    @Override
    public String toString() {
        return "Product [id=" + id + ", name=" + name + "]";
    }

    public String getMainImage() {
        return mainImage;
    }

    public void setMainImage(String mainImage) {
        this.mainImage = mainImage;
    }

    public Set<ProductImage> getImages() {
        return images;
    }

    public void setImages(Set<ProductImage> images) {
        this.images = images;
    }

    /*Auto-generated by InteliJ Idea*/
    ////////////////////////////////////////////////////////////


/*
@Author: Code Java.
“Spring Boot Tutorials Playlist” [online]
Available at: https://youtu.be/zDc63OHY_v8
*/

    public void addExtraImage(String imageName) {
        this.images.add(new ProductImage(imageName, this));
    }


    /*
    @Author: Code Java.
    “Spring Boot Tutorials Playlist” [online]
    Available at: https://youtu.be/zDc63OHY_v8
    */
    @Transient
    public String getMainImagePath() {
        if (id == null || mainImage == null) return "/images/image-thumbnail.png";

        return "/product-images/" + this.id + "/" + this.mainImage;
    }

    ////////////////////////////////////////////////////////////////////
    /*Auto-generated by InteliJ Idea*/
    public List<ProductDetail> getDetails() {
        return details;
    }

    public void setDetails(List<ProductDetail> details) {
        this.details = details;
    }

    ////////////////////////////////////////////////////////////////


/*
@Author: Code Java.
“Spring Boot Tutorials Playlist” [online]
Available at: https://youtu.be/zDc63OHY_v8
*/
    public void addDetail(String name, String value) {
        this.details.add(new ProductDetail(name, value, this));
    }


    /*
    @Author: Code Java.
    “Spring Boot Tutorials Playlist” [online]
    Available at: https://youtu.be/zDc63OHY_v8
    */
    public void addDetail(Integer id, String name, String value) {
        this.details.add(new ProductDetail(id, name, value, this));
    }

    /*
    @Author: Code Java.
    “Spring Boot Tutorials Playlist” [online]
    Available at: https://youtu.be/zDc63OHY_v8
    */
    public boolean containsImageName(String imageName) {
        Iterator<ProductImage> iterator = images.iterator();

        while (iterator.hasNext()) {
            ProductImage image = iterator.next();
            if (image.getName().equals(imageName)) {
                return true;
            }
        }

        return false;
    }


/*
@Author: Code Java.
“Spring Boot Tutorials Playlist” [online]
Available at: https://youtu.be/zDc63OHY_v8
*/
    @Transient
    public String getShortName() {
        if (name.length() > 70) {
            return name.substring(0, 70).concat("...");
        }
        return name;
    }


/*
@Author: Code Java.
“Spring Boot Tutorials Playlist” [online]
Available at: https://youtu.be/zDc63OHY_v8
*/
    @Transient
    public float getDiscountPrice() {
        if (discountPercent > 0) {
            return price * ((100 - discountPercent) / 100);
        }
        return this.price;
    }

}